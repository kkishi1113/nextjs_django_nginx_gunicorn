version: '3.8'

services:
  db:
    container_name: db
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
     - 5431:5432
    # networks:
    #   mynetwork:
    #     ipv4_address: 172.21.0.2

  web:
    container_name: web
    build: ./frontend
    env_file:
      - .env
    # ports:
    #   - ${WEB_PORT:-3000}:${WEB_PORT:-3000}
    volumes:
      - ./frontend:/usr/src/app
    command:  sh -c "npm install && npm run dev -- -p ${WEB_PORT:-3000}"
    tty: true
    stdin_open: true
    # networks:
    #   mynetwork:
    #     ipv4_address: 172.21.0.3

  backend:
    container_name: backend
    build: ./backend
    env_file:
      - .env
    # ports:
    #   - ${API_PORT:-8000}:${API_PORT:-8000}
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - db
    # command:  sh -c "python manage.py migrate && gunicorn my_project.wsgi:application --bind 0.0.0.0:${API_PORT:-8000}"
    # command:  sh -c "python manage.py collectstatic && pip install --no-cache-dir -r requirements.txt && gunicorn my_project.wsgi:application --bind 0.0.0.0:${API_PORT:-8000}"
    command:  sh -c "pip install --no-cache-dir -r requirements.txt && gunicorn my_project.wsgi:application --bind 0.0.0.0:${API_PORT:-8000}"
    tty: true
    stdin_open: true
    # networks:
    #   mynetwork:
    #     ipv4_address: 172.21.0.4

  nginx:
    container_name: nginx
    build: ./nginx
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./backend/public/static:/var/www/myproject/static
    depends_on:
      - web
      - backend
    tty: true
    stdin_open: true
    # command: sh -c "su find / -name login.css"
    # networks:
    #   mynetwork:
    #     ipv4_address: 172.21.0.5
    # networks:
    #   default:
    #     aliases:
    #       - kishikatsushige.local

volumes:
  postgres_data:

# networks:
#   mynetwork:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.21.0.0/16